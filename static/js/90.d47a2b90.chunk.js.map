{"version":3,"file":"static/js/90.d47a2b90.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm .js","components/ContactList/ContactList .js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import { createSelector } from 'reselect';\n\nexport const selectContacts = state => state.contacts.list;\nexport const selectFilter = state => state.contacts.filter;\n\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(\n      contact =>\n        contact.name &&\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addContact } from '../../redux/contacts/contactsOperations';\nimport { selectContacts } from '../../redux/contacts/selectors';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [contact, setContact] = useState({ name: '', phone: '' });\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleInputChange = e => {\n    setErrorMessage('');\n    const { name, value } = e.target;\n    setContact(prevContact => ({\n      ...prevContact,\n      [name]: value,\n    }));\n  };\n\n    const handleAddContact = e => {\n      e.preventDefault();\n      const { name, phone } = contact;\n\n      if (name.trim() === '' || phone.trim() === '') {\n        setErrorMessage('Name and phone are required.');\n        return;\n      }\n\n      const existingContact = contacts.find(\n        c => c.name.toLowerCase() === name.toLowerCase() || c.phone === phone\n      );\n      if (existingContact) {\n        setErrorMessage('Цей контакт та номер вже існує.');\n        return;\n      }\n\n      dispatch(addContact({ name, phone }));\n\n      setContact({ name: '', phone: '' });\n    };\n\n\n\n\n  return (\n    <>\n      <form onSubmit={handleAddContact}>\n        <label>Ім'я</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={contact.name}\n          onChange={handleInputChange}\n          required\n        />\n        <label>Номер</label>\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          value={contact.phone}\n          onChange={handleInputChange}\n          required\n        />\n        <button type=\"submit\">Додати контакт</button>\n      </form>\n      {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n    </>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contactsOperations';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <ul>\n      {visibleContacts.map(contact => (\n        <li key={contact.id}>\n          {contact.name}: {contact.phone}{' '}\n          <button onClick={() => handleDeleteContact(contact.id)}>\n            Видалити\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/contactsSlice';\nimport { selectFilter } from '../../redux/contacts/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilterChange}\n        placeholder=\"Пошук контактів...\"\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nimport { fetchContacts } from '../redux/contacts/contactsOperations';\n\nimport  ContactForm  from '../components/ContactForm/ContactForm ';\nimport  ContactList  from '../components/ContactList/ContactList ';\nimport  Filter  from '../components/Filter/Filter';\nimport { selectIsLoading } from '../redux/contacts/selectors';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      {/* <h1>`Телефонна книга` < /h1> */}\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactForm />\n      <h2>Контакти</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","list","selectFilter","filter","selectIsLoading","isLoading","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","dispatch","useDispatch","useSelector","_useState","useState","phone","_useState2","_slicedToArray","setContact","_useState3","_useState4","errorMessage","setErrorMessage","handleInputChange","e","_e$target","target","value","prevContact","_objectSpread","_defineProperty","_jsxs","_Fragment","children","onSubmit","preventDefault","trim","find","c","addContact","_jsx","type","onChange","required","style","color","visibleContacts","map","onClick","id","deleteContact","setFilter","placeholder","Tasks","useEffect","fetchContacts","ContactForm","Filter","ContactList"],"sourceRoot":""}