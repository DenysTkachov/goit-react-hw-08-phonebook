{"version":3,"file":"static/js/90.67dd8d45.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm .js","components/ContactList/ContactList .js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import { createSelector } from 'reselect';\n\nexport const selectContacts = state => state.contacts.list;\nexport const selectFilter = state => state.contacts.filter;\n\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(\n      contact =>\n        contact.name &&\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addContact } from '../../redux/contacts/contactsOperations';\nimport { selectContacts } from '../../redux/contacts/selectors';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [contact, setContact] = useState({ name: '', number: '' });\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleInputChange = e => {\n    setErrorMessage('');\n    const { name, value } = e.target;\n    setContact(prevContact => ({\n      ...prevContact,\n      [name]: value,\n    }));\n  };\n\n    const handleAddContact = async e => {\n      e.preventDefault();\n      const { name, number } = contact;\n\n    \n      if (name.trim() === '' || number.trim() === '') {\n        setErrorMessage('Name and number are required.');\n        return;\n      }\n\n      const existingContact = contacts.find(\n        c => c.name.toLowerCase() === name.toLowerCase() || c.number === number\n      );\n      if (existingContact) {\n        setErrorMessage('Цей контакт та номер вже існує.');\n        return;\n      }\n\n      dispatch(addContact({ name, number }));\n\n      setContact({ name: '', number: '' });\n    };\n\n\n\n\n  return (\n    <>\n      <form onSubmit={handleAddContact}>\n        <label>Ім'я</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={contact.name}\n          onChange={handleInputChange}\n          required\n        />\n        <label>Номер</label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={contact.number}\n          onChange={handleInputChange}\n          required\n        />\n        <button type=\"submit\">Додати контакт</button>\n      </form>\n      {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n    </>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contactsOperations';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <ul>\n      {visibleContacts.map(contact => (\n        <li key={contact.id}>\n          {contact.name}: {contact.phone}{' '}\n          <button onClick={() => handleDeleteContact(contact.id)}>\n            Видалити\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/contactsSlice';\nimport { selectFilter } from '../../redux/contacts/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilterChange}\n        placeholder=\"Пошук контактів...\"\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nimport { fetchContacts } from '../redux/contacts/contactsOperations';\n\nimport  ContactForm  from '../components/ContactForm/ContactForm ';\nimport  ContactList  from '../components/ContactList/ContactList ';\nimport  Filter  from '../components/Filter/Filter';\nimport { selectIsLoading } from '../redux/contacts/selectors';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      {/* <h1>`Телефонна книга` < /h1> */}\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactForm />\n      <h2>Контакти</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","list","selectFilter","filter","selectIsLoading","isLoading","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","setContact","useState","number","errorMessage","setErrorMessage","handleInputChange","e","value","target","prevContact","_jsxs","_Fragment","children","onSubmit","async","preventDefault","trim","find","c","addContact","_jsx","type","onChange","required","style","color","ContactList","visibleContacts","map","phone","onClick","handleDeleteContact","id","deleteContact","Filter","setFilter","placeholder","ContactsPage","useEffect","fetchContacts"],"sourceRoot":""}